
import zipfile, time, cherrypy, config, os

class UserPackage:
	def __init__(self, username, dn, keycert, apps):
		self.filename = "tmp/%s.%s.zip" % (username, dn)
		self.username = username
		self.dn = dn
		
		# open zip
		self.zipFile = zipfile.ZipFile(self.filename, "w")
		
		# write cert/key to zip
		for k, v in keycert.iteritems():
			self.writeString("/config/%s" % k, v)
			
		self.userConfigFile()
		self.appDirs(apps)
			
	def writeString(self, name, str):
		now = time.localtime(time.time())[:6]
		
		zfk = zipfile.ZipInfo(name)
		zfk.date_time = now
		zfk.compress_type = zipfile.ZIP_DEFLATED
		self.zipFile.writestr(zfk, str)
		
	def writeFile(self, path, name):		
		self.zipFile.write(path, name, zipfile.ZIP_DEFLATED)
	
	def userConfigFile(self):
		tlsremote = "\"/CN=server.%s/O=%s/OU=%s/C=%s/ST=%s/L=%s\"" % (
																		cherrypy.session['currentconf']["domain"],
																		cherrypy.session['currentconf']["o"],
																		cherrypy.session['currentconf']["ou"],
																		cherrypy.session['currentconf']["c"],
																		cherrypy.session['currentconf']["st"],
																		cherrypy.session['currentconf']["l"]
																		)
		
		options = {
				   "client":[],
				   "dev":["tun"],
				   "port":cherrypy.session['currentconf'].options["port"],
				   "proto":cherrypy.session['currentconf'].options["proto"],
				   "tls-client": [],
				   "ca": ["ca.%s.cert" % cherrypy.session['currentconf'].dn],
				   "cert": ["%s.users.%s.cert" % (self.username, cherrypy.session['currentconf'].dn)],
				   "key": ["%s.users.%s.key" % (self.username, cherrypy.session['currentconf'].dn)],
				   "tls-auth": ["ta.%s.key" % cherrypy.session['currentconf'].dn, "1"],
				   "remote": [cherrypy.session['currentconf']["remoteip"]],
				   "tls-remote": [tlsremote.replace(" ", "_")],
				   "pull": [],
				   "auth-user-pass": [],
				   "reneg-sec": ["0"],
				   "comp-lzo": [""]
		}
		
		str = "# automagicaly generated by the king of tunnels\n"
		
		for k, v in options.iteritems():
			line = "%s" % k
			for o in v:
				line = "%s %s" % (line, o)
			
			line = line+"\n"
			str = str+line
		
		self.writeString("config/%s.users.%s.ovpn" % (self.username, self.dn), str)
	
	def getAppInfo(self, app):
		infofile = open("%s/apps/%s/__info__" % (config.basemap, app), "r")
		lines = infofile.readlines()
		
		info = {}
		for infoLine in lines:
			spline = infoLine.strip().split("=")
			info[spline[0]] = spline[1]
		
		return info
		
	def appDirs(self, apps):
		for app in apps:
			version = self.getAppInfo(app)["VERSION_PRODUCTION"]
			
			for r, d, f in os.walk("%sapps/%s/%s" % (config.basemap, app, version)):
				for file in f:
					if file != "__info__":
						filepath = "%s/%s" % (r,file)
						name = "apps/%s/%s" % (app, filepath.replace("%sapps/%s/%s/" % (config.basemap, app, version), ""))
						self.writeFile(filepath, name)
	
	def closeAndGetName(self):
		self.zipFile.close()